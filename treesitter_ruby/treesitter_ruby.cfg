[n.global]
output = treesitter_ruby

[n.include]
$output/include
$output/ruby/src

[n.prepare]
gitoutput.lang = "ruby"
gitremote.lang = "https://github.com/tree-sitter/tree-sitter-ruby"
gitsparse.lang = """
src/*.h
src/*.c
src/*.cc
src/tree_sitter/*.h
"""

[n.exclude]
parser.h
ruby.nim

[treesitter_ruby/ruby/src/parser.h]
create = """
typedef struct TSLanguage TSLanguage;
const TSLanguage *tree_sitter_ruby();
"""

[treesitter_ruby/ruby.nim]
create = """
import treesitter/api
import strutils
const
  sourcePath = currentSourcePath().split({'\\', '/'})[0..^2].join("/")
  headerlang = sourcePath & "/ruby/src/parser.h"

{.compile: ("../treesitter_ruby/ruby/src/parser.c", "parserruby.o").}
{.compile: ("../treesitter_ruby/ruby/src/scanner.c", "scannerruby.o").}

proc treeSitterruby*(): ptr TSLanguage {.stdcall, importc: "tree_sitter_ruby", header: headerlang.}
"""
