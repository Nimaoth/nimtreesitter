[n.global]
output = treesitter_php

[n.include]
$output/include
$output/php/php/src

[n.prepare]
gitoutput.lang = "php"
gitremote.lang = "https://github.com/tree-sitter/tree-sitter-php"
gitsparse.lang = """
php/src/*.h
php/src/*.c
php/src/*.cc
php/src/tree_sitter/*.h
"""

[n.exclude]
parser.h
php.nim

[treesitter_php/php/php/src/parser.h]
create = """
typedef struct TSLanguage TSLanguage;
const TSLanguage *tree_sitter_php();
"""

[treesitter_php/php.nim]
create = """
import treesitter/api
import strutils
const
  sourcePath = currentSourcePath().split({'\\', '/'})[0..^2].join("/")
  headerlang = sourcePath & "/php/php/src/parser.h"

{.compile: ("../treesitter_php/php/php/src/parser.c", "parserphp.o").}
{.compile: ("../treesitter_php/php/php/src/scanner.c", "scannerphp.o").}

proc treeSitterphp*(): ptr TSLanguage {.stdcall, importc: "tree_sitter_php", header: headerlang.}
"""
