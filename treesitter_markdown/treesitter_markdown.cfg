[n.global]
output = treesitter_markdown

[n.include]
$output/include
$output/markdown/tree-sitter-markdown/src

[n.prepare]
gitoutput.lang = "markdown"
gitbranch.lang = "split_parser"
gitremote.lang = "https://github.com/tree-sitter-grammars/tree-sitter-markdown"
gitsparse.lang = """
*
#tree-sitter-markdown/src/*.h
#tree-sitter-markdown/src/*.c
#tree-sitter-markdown/src/*.cc
#tree-sitter-markdown/src/tree_sitter/*.h
"""

[n.exclude]
parser.h
markdown.nim

[treesitter_markdown/markdown/tree-sitter-markdown/src/parser.h]
create = """
typedef struct TSLanguage TSLanguage;
const TSLanguage *tree_sitter_markdown();
"""

[treesitter_markdown/markdown.nim]
create = """
import treesitter/api
import strutils
const
  sourcePath = currentSourcePath().split({'\\', '/'})[0..^2].join("/")
  headerlang = sourcePath & "/markdown/tree-sitter-markdown/src/tree_sitter/parser.h"
  includeTreeSitter = "-I" & sourcePath & "/markdown/tree-sitter-markdown/src"

{.compile("markdown/tree-sitter-markdown/src/parser.c", includeTreeSitter).}

proc treeSitterMarkdown*(): ptr TSLanguage {.stdcall, importc: "tree_sitter_markdown", header: headerlang.}
"""
