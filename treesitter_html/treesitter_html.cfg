[n.global]
output = treesitter_html

[n.include]
$output/include
$output/html/src

[n.prepare]
gitoutput.lang = "html"
gitremote.lang = "https://github.com/tree-sitter/tree-sitter-html"
gitsparse.lang = """
src/*.h
src/*.c
src/*.cc
src/tree_sitter/*.h
"""

[n.exclude]
parser.h
html.nim

[treesitter_html/html/src/parser.h]
create = """
typedef struct TSLanguage TSLanguage;
const TSLanguage *tree_sitter_html();
"""

[treesitter_html/html.nim]
create = """
import treesitter/api
import strutils
const
  sourcePath = currentSourcePath().split({'\\', '/'})[0..^2].join("/")
  headerlang = sourcePath & "/html/src/parser.h"

{.compile: ("../treesitter_html/html/src/parser.c", "parserhtml.o").}
{.compile: ("../treesitter_html/html/src/scanner.c", "scannerhtml.o").}

proc treeSitterhtml*(): ptr TSLanguage {.stdcall, importc: "tree_sitter_html", header: headerlang.}
"""
